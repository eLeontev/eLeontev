{"version":3,"sources":["src/model/game.model.ts","src/helpers/radiant-transformer.ts","src/helpers/randomizer.ts","src/game/index.ts","index.ts"],"names":[],"mappings":"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","file":"game_touch.77de5100.js","sourceRoot":"..","sourcesContent":["export interface Game {\n    name: string;\n    level: number;\n    score: number;\n}\n\nexport interface MiddleCoordinate {\n    x: number;\n    y: number;\n}\n\nexport interface Field {\n    radius: number;\n    backgroundColor: number;\n    middleCoordinate: MiddleCoordinate;\n}\n\nexport enum direction {\n    clockwise = -1,\n    сСlockwise = 1\n}\n\nexport interface Pointer {\n    direction: direction;\n    color: string;\n    angle: number;\n}\n\nexport interface Switcher {\n    rootAngle: number;\n    offsets: number;\n}\n","export const getRadians = (degrees: number) => (Math.PI / 180) * degrees;\n","export const randomIntegerInRange = (min: number, max: number): number =>\n    Math.floor(min + Math.random() * (max + 1 - min));\n","import { MiddleCoordinate, direction } from '../model/game.model';\nimport { getRadians } from '../helpers/radiant-transformer';\nimport { randomIntegerInRange } from '../helpers/randomizer';\n\nconst { clockwise, сСlockwise } = direction;\nconst domRectList = document.body.getClientRects();\nconst { width, height } = domRectList[0];\n\nconst canvasSize = width > height ? height : width;\nconst canvasMiddlePosition = canvasSize / 2;\nconst radius = canvasMiddlePosition * 0.9;\nconst innerRadius = radius / 3;\nconst minimumEnemyOffset = 20;\n\nconst canvasMiddlePoint: MiddleCoordinate = {\n    x: canvasMiddlePosition,\n    y: canvasMiddlePosition\n};\n\nconst { x, y } = canvasMiddlePoint;\nlet angle = 179;\n\nconst canvas = document.getElementById('canvas') as HTMLCanvasElement;\nconst ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\nctx.canvas.width = canvasSize;\nctx.canvas.height = canvasSize;\nctx.canvas.style.backgroundColor = 'white';\n\nconst setStaticFigures = (canvasCtx: CanvasRenderingContext2D) => {\n    canvasCtx.beginPath();\n    canvasCtx.lineWidth = 1;\n    canvasCtx.strokeStyle = 'black';\n    canvasCtx.lineJoin = 'bevel';\n\n    canvasCtx.arc(x, y, radius, 0, getRadians(360));\n    canvasCtx.stroke();\n\n    canvasCtx.beginPath();\n    canvasCtx.arc(x, y, innerRadius, 0, getRadians(360));\n    canvasCtx.stroke();\n};\n\nlet pointerDirection = clockwise;\n\nconst setDocumentListener = (listener: () => void) => {\n    document.addEventListener('click', listener);\n    document.addEventListener('keydown', listener);\n};\nconst drowPointer = (angle: number, canvasCtx: CanvasRenderingContext2D, usedColor: string) => {\n    const angleRad = getRadians(angle);\n    const xPosition = radius * Math.sin(angleRad) + x;\n    const yPosition = radius * Math.cos(angleRad) + y;\n\n    canvasCtx.beginPath();\n    canvasCtx.lineWidth = 4;\n    canvasCtx.lineJoin = 'round';\n    canvasCtx.strokeStyle = usedColor;\n    canvasCtx.moveTo(x, y);\n\n    canvasCtx.lineTo(xPosition, yPosition);\n    canvasCtx.stroke();\n};\n\nconst getUpdatedAngle = (updatedAngle: number, direction: number) => {\n    return direction === clockwise ? (updatedAngle <= 0 ? 360 : updatedAngle) : updatedAngle >= 360 ? 0 : updatedAngle;\n};\n\nconst performPointerItaration = (canvasCtx: CanvasRenderingContext2D) => {\n    drowPointer(angle, canvasCtx, 'blue');\n    angle = getUpdatedAngle(angle + pointerDirection, pointerDirection);\n};\n\nconst calclulateEnemy = (angle: number) => {\n    const minEnemyPosition = Math.abs(angle % 360) + minimumEnemyOffset;\n    const maxEnemyPosition = minEnemyPosition + 360 - minimumEnemyOffset;\n\n    const middlePointAngle = randomIntegerInRange(minimumEnemyOffset, maxEnemyPosition) % 360;\n    const distanceFromMiddlePoint = randomIntegerInRange(innerRadius, radius * 0.9);\n    const enemyRadius = randomIntegerInRange(innerRadius * 0.1, innerRadius * 0.4);\n\n    const angleRad = getRadians(middlePointAngle);\n    const xPosition = distanceFromMiddlePoint * Math.sin(angleRad) + x;\n    const yPosition = distanceFromMiddlePoint * Math.cos(angleRad) + y;\n\n    const angleOffset = (Math.atan(enemyRadius / distanceFromMiddlePoint) * 180) / Math.PI;\n\n    const min = middlePointAngle - angleOffset;\n    const max = middlePointAngle + angleOffset;\n\n    return {\n        xPosition,\n        yPosition,\n        enemyRadius,\n        middlePointAngle,\n        enemyAngleRange: [min, max]\n    };\n};\n\nlet enemyCoords: any;\nconst drowEnemy = (angle: number, canvasCtx: CanvasRenderingContext2D) => {\n    if (!enemyCoords) {\n        enemyCoords = calclulateEnemy(angle);\n    }\n\n    const { xPosition, yPosition, enemyRadius } = enemyCoords;\n\n    canvasCtx.beginPath();\n    canvasCtx.lineWidth = 1;\n    canvasCtx.strokeStyle = 'red';\n\n    canvasCtx.arc(xPosition, yPosition, enemyRadius, 0, getRadians(360));\n    canvasCtx.stroke();\n};\n\nconst performCleanUp = (canvasCtx: CanvasRenderingContext2D) => {\n    canvasCtx.beginPath();\n    canvasCtx.fillStyle = 'white';\n    canvasCtx.fillRect(0, 0, canvasSize, canvasSize);\n};\n\nconst startGame = () => {\n    setInterval(() => {\n        performCleanUp(ctx);\n        setStaticFigures(ctx);\n        performPointerItaration(ctx);\n        drowEnemy(angle, ctx);\n    }, 10);\n};\n\nconst updateEnemyStatus = () => {\n    if (!enemyCoords) {\n        return;\n    }\n\n    const {\n        enemyAngleRange: [min, max]\n    } = enemyCoords;\n\n    const validatedAngle = angle === 360 ? 0 : angle;\n    const isEnemyInRange = validatedAngle > min && validatedAngle < max;\n\n    if (isEnemyInRange) {\n        enemyCoords = null;\n    }\n};\nconst changePointerDirection = () => {\n    pointerDirection = pointerDirection === clockwise ? сСlockwise : clockwise;\n    updateEnemyStatus();\n};\n\nlet isGameStarted: boolean = false;\nconst addListenerToStartGame = (listener: () => void) => {\n    const button = document.getElementById('button');\n\n    if (!button) {\n        return;\n    }\n\n    button.addEventListener('keydown', event => event.preventDefault());\n    button.addEventListener('click', () => {\n        if (!isGameStarted) {\n            isGameStarted = true;\n            listener();\n            document.body.focus();\n        }\n    });\n};\nsetDocumentListener(changePointerDirection);\n\naddListenerToStartGame(startGame);\n","import './src/game/';\n"]}